#container{
    height: 300px;
    width: 80%;
    background-color: azure;
    margin: 10px auto;
    border: 2px solid black;
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    /* flex-wrap: wrap; */
    align-items: center;
    align-content: flex-start;
     
}

#org{
    align-self: center;
    flex-basis: 50px;
}

#blue{
    flex-basis: 300px;
}

h1{
    text-align: center;
}

#container div{
    height: 100px;
    width: 300px;
    color: white;
    text-align: center;
    font-size: 1.5em;
}

/* Flex Shorthand

â€¢

flex-grow | flex-shrink | flex-basis

flex 2 2 100px;

* flex-grow | flex-basis

flex : 2 100px;

* flex-grow (unitless)

flex: 2;

* flex-basis

flex: 100px; 

*/





/* Justify Content

Tells how the browser space between and around content items along the main axis 
justify - content : flex-start;
justify - content : flex-end;
justify - content : centre;
justify - content : space-around;
justify - content : space-between;
justify - content : space-evenly;
*/

/* Flex Wrap

Sets whether flex items are forced onto one line or can wrap onto multiple lines
flex-wrap: nowrap;
flex-wrap: wrap;
flex-wrap: wrap-reverse;
*/

/*  ALIGN ITEMS

Distributes our items along the cross axis 
ustify - content : flex-start;
justify - content : flex-end;
justify - content : centre;
*/

/* Align Content

It sets the distribution of space between and around content items along a flexbox's cross-axis
align - content : flex-start/flex-end/center;
align - content :space-around / space-between/evenly;
align - content : baseline;
*/


/* Align Self

Align an item along the cross axis

align-self : flex-start;
align-self : flex-end;
align-self : center;
align-self : baseline;
*/ 


/* FLEX SIZING */

/* 1) Flex-basis

It sets initial main size of a flex item.

flex-basis:100px;

2) Flex-grow

It specifies how much of the flex container's remaining space be assigned to the flex item's main size.
flex-grow:1
*/


